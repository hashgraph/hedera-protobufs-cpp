name: "ZXC: Build Library"
on:
  workflow_call:
    inputs:
      hapi-version-tag:
        type: string
        required: false
        default: "v0.30.0"

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  hapi-version:
    name: Version Check
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Install Semantic Version Tools
        run: |
          echo "::group::Download SemVer Binary"
          sudo curl -L -o /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          echo "::endgroup::"
          echo "::group::Change SemVer Binary Permissions"
          sudo chmod -v +x /usr/local/bin/semver
          echo "::endgroup::"
          echo "::group::Show SemVer Binary Version Info"
          semver --version
          echo "::endgroup::"
    
      - name: Validate HAPI Version Tag
        id: version
        run: |
          HAPI_VERSION="${{ inputs.hapi-version-tag }}"
          VALID_VERSION="$(semver validate "${HAPI_VERSION}")"

          if [[ "${VALID_VERSION}" != "valid" ]]; then
            echo "::error title=Version Error::The supplied hapi-version-tag parameter (${HAPI_VERSION}) is invalid and does not conform to the semantic versioning specifications."
            exit 2
          fi
          
          [[ "${HAPI_VERSION}" == v* ]] || HAPI_VERSION="v${HAPI_VERSION}"
          echo "::set-output name=number::${HAPI_VERSION}"

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            preset: ninja-multi-vcpkg
          - os: macos-latest
            preset: ninja-multi-vcpkg
          - os: windows-latest
            preset: msbuild-vcpkg
    needs:
      - hapi-version
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Library Package Cache
        uses: actions/cache@v3
        with:
          path: package
          key: v1-library-packages-ri${{ github.run_id }}-ra${{ github.run_attempt }}-${{ github.sha }}

      - name: Install CMake & Ninja
        uses: lukka/get-cmake@latest

      - name: Setup VCPkg
        uses: lukka/run-vcpkg@v10

      - name: CMake Build
        uses: lukka/run-cmake@v10
        with:
          configurePreset: ${{ matrix.preset }}
          buildPreset: ${{ matrix.preset }}-debug

      - name: Compute Short SHA
        id: sha
        run: echo "::set-output name=short::$(echo -n "${{ github.sha }}" | cut -c1-8)"

      - name: Attach Artifact
        uses: actions/upload-artifact@v3
        with:
          name: hapi-library-${{ runner.os }}-${{ steps.sha.outputs.short }}
          path: package/**
          if-no-files-found: warn
